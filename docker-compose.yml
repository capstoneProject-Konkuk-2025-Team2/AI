version: '3.8'

services:
  fastapi-app:
    build: .
    container_name: fastapi-app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./app/data:/app/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - backend
    depends_on:
      - redis
  

  celery-worker:
    build: .
    container_name: celery-worker
    command: celery -A app.config.celery_config worker --loglevel=info
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./app/data:/app/app/data
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - backend

  celery-beat:
    build: .
    container_name: celery-beat
    command: celery -A app.config.celery_config beat --loglevel=info
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./app/data:/app/app/data
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - backend

  flower:
    image: mher/flower
    container_name: flower
    ports:
      - "5555:5555"
    command: flower --broker=redis://redis:6379/0 --port=5555
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - backend

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  redis_data:
    driver: local 